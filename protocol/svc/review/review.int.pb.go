// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.24.0
// source: svc/review/review.int.proto

package review

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ReviewType int32

const (
	ReviewType_Text  ReviewType = 0
	ReviewType_Image ReviewType = 1
	ReviewType_Audio ReviewType = 2
	ReviewType_Video ReviewType = 3
)

// Enum value maps for ReviewType.
var (
	ReviewType_name = map[int32]string{
		0: "Text",
		1: "Image",
		2: "Audio",
		3: "Video",
	}
	ReviewType_value = map[string]int32{
		"Text":  0,
		"Image": 1,
		"Audio": 2,
		"Video": 3,
	}
)

func (x ReviewType) Enum() *ReviewType {
	p := new(ReviewType)
	*p = x
	return p
}

func (x ReviewType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReviewType) Descriptor() protoreflect.EnumDescriptor {
	return file_svc_review_review_int_proto_enumTypes[0].Descriptor()
}

func (ReviewType) Type() protoreflect.EnumType {
	return &file_svc_review_review_int_proto_enumTypes[0]
}

func (x ReviewType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReviewType.Descriptor instead.
func (ReviewType) EnumDescriptor() ([]byte, []int) {
	return file_svc_review_review_int_proto_rawDescGZIP(), []int{0}
}

type ResultState int32

const (
	ResultState_Unavailable ResultState = 0
	ResultState_Pass        ResultState = 1
	ResultState_Reject      ResultState = 2
	ResultState_Review      ResultState = 3
)

// Enum value maps for ResultState.
var (
	ResultState_name = map[int32]string{
		0: "Unavailable",
		1: "Pass",
		2: "Reject",
		3: "Review",
	}
	ResultState_value = map[string]int32{
		"Unavailable": 0,
		"Pass":        1,
		"Reject":      2,
		"Review":      3,
	}
)

func (x ResultState) Enum() *ResultState {
	p := new(ResultState)
	*p = x
	return p
}

func (x ResultState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResultState) Descriptor() protoreflect.EnumDescriptor {
	return file_svc_review_review_int_proto_enumTypes[1].Descriptor()
}

func (ResultState) Type() protoreflect.EnumType {
	return &file_svc_review_review_int_proto_enumTypes[1]
}

func (x ResultState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResultState.Descriptor instead.
func (ResultState) EnumDescriptor() ([]byte, []int) {
	return file_svc_review_review_int_proto_rawDescGZIP(), []int{1}
}

type ReviewResourceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    ReviewType `protobuf:"varint,1,opt,name=type,proto3,enum=svc.user.ReviewType" json:"type,omitempty"`
	Uid     int64      `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Content string     `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	Channel string     `protobuf:"bytes,4,opt,name=channel,proto3" json:"channel,omitempty"` // review channel
}

func (x *ReviewResourceReq) Reset() {
	*x = ReviewResourceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_review_review_int_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReviewResourceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReviewResourceReq) ProtoMessage() {}

func (x *ReviewResourceReq) ProtoReflect() protoreflect.Message {
	mi := &file_svc_review_review_int_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReviewResourceReq.ProtoReflect.Descriptor instead.
func (*ReviewResourceReq) Descriptor() ([]byte, []int) {
	return file_svc_review_review_int_proto_rawDescGZIP(), []int{0}
}

func (x *ReviewResourceReq) GetType() ReviewType {
	if x != nil {
		return x.Type
	}
	return ReviewType_Text
}

func (x *ReviewResourceReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *ReviewResourceReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ReviewResourceReq) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

type ReviewResourceRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State ResultState `protobuf:"varint,1,opt,name=state,proto3,enum=svc.user.ResultState" json:"state,omitempty"`
}

func (x *ReviewResourceRes) Reset() {
	*x = ReviewResourceRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_review_review_int_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReviewResourceRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReviewResourceRes) ProtoMessage() {}

func (x *ReviewResourceRes) ProtoReflect() protoreflect.Message {
	mi := &file_svc_review_review_int_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReviewResourceRes.ProtoReflect.Descriptor instead.
func (*ReviewResourceRes) Descriptor() ([]byte, []int) {
	return file_svc_review_review_int_proto_rawDescGZIP(), []int{1}
}

func (x *ReviewResourceRes) GetState() ResultState {
	if x != nil {
		return x.State
	}
	return ResultState_Unavailable
}

var File_svc_review_review_int_proto protoreflect.FileDescriptor

var file_svc_review_review_int_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x73, 0x76, 0x63, 0x2f, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2f, 0x72, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x2e, 0x69, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73,
	0x76, 0x63, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x22, 0x83, 0x01, 0x0a, 0x11, 0x52, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x12, 0x28, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x73, 0x76,
	0x63, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x22, 0x40, 0x0a,
	0x11, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x12, 0x2b, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x15, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2a,
	0x37, 0x0a, 0x0a, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a,
	0x04, 0x54, 0x65, 0x78, 0x74, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x10, 0x02, 0x12, 0x09, 0x0a,
	0x05, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x10, 0x03, 0x2a, 0x40, 0x0a, 0x0b, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x6e, 0x61, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x50, 0x61, 0x73, 0x73,
	0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x10, 0x02, 0x12, 0x0a,
	0x0a, 0x06, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x10, 0x03, 0x32, 0x55, 0x0a, 0x07, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x74, 0x12, 0x4a, 0x0a, 0x0e, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1b, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x42, 0x1e, 0x5a, 0x1c, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x76, 0x63, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x73, 0x76, 0x63, 0x2f, 0x72, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_svc_review_review_int_proto_rawDescOnce sync.Once
	file_svc_review_review_int_proto_rawDescData = file_svc_review_review_int_proto_rawDesc
)

func file_svc_review_review_int_proto_rawDescGZIP() []byte {
	file_svc_review_review_int_proto_rawDescOnce.Do(func() {
		file_svc_review_review_int_proto_rawDescData = protoimpl.X.CompressGZIP(file_svc_review_review_int_proto_rawDescData)
	})
	return file_svc_review_review_int_proto_rawDescData
}

var file_svc_review_review_int_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_svc_review_review_int_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_svc_review_review_int_proto_goTypes = []interface{}{
	(ReviewType)(0),           // 0: svc.user.ReviewType
	(ResultState)(0),          // 1: svc.user.ResultState
	(*ReviewResourceReq)(nil), // 2: svc.user.ReviewResourceReq
	(*ReviewResourceRes)(nil), // 3: svc.user.ReviewResourceRes
}
var file_svc_review_review_int_proto_depIdxs = []int32{
	0, // 0: svc.user.ReviewResourceReq.type:type_name -> svc.user.ReviewType
	1, // 1: svc.user.ReviewResourceRes.state:type_name -> svc.user.ResultState
	2, // 2: svc.user.UserInt.ReviewResource:input_type -> svc.user.ReviewResourceReq
	3, // 3: svc.user.UserInt.ReviewResource:output_type -> svc.user.ReviewResourceRes
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_svc_review_review_int_proto_init() }
func file_svc_review_review_int_proto_init() {
	if File_svc_review_review_int_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_svc_review_review_int_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReviewResourceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_review_review_int_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReviewResourceRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_svc_review_review_int_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_svc_review_review_int_proto_goTypes,
		DependencyIndexes: file_svc_review_review_int_proto_depIdxs,
		EnumInfos:         file_svc_review_review_int_proto_enumTypes,
		MessageInfos:      file_svc_review_review_int_proto_msgTypes,
	}.Build()
	File_svc_review_review_int_proto = out.File
	file_svc_review_review_int_proto_rawDesc = nil
	file_svc_review_review_int_proto_goTypes = nil
	file_svc_review_review_int_proto_depIdxs = nil
}
