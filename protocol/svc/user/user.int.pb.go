// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.24.0
// source: svc/user/user.int.proto

package user

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	svc "microsvc/protocol/svc"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetUserIntReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Req *svc.BaseExtReq `protobuf:"bytes,1,opt,name=req,proto3" json:"req,omitempty"`
	Uid []int64         `protobuf:"varint,2,rep,packed,name=uid,proto3" json:"uid,omitempty"`
}

func (x *GetUserIntReq) Reset() {
	*x = GetUserIntReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_user_user_int_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserIntReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserIntReq) ProtoMessage() {}

func (x *GetUserIntReq) ProtoReflect() protoreflect.Message {
	mi := &file_svc_user_user_int_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserIntReq.ProtoReflect.Descriptor instead.
func (*GetUserIntReq) Descriptor() ([]byte, []int) {
	return file_svc_user_user_int_proto_rawDescGZIP(), []int{0}
}

func (x *GetUserIntReq) GetReq() *svc.BaseExtReq {
	if x != nil {
		return x.Req
	}
	return nil
}

func (x *GetUserIntReq) GetUid() []int64 {
	if x != nil {
		return x.Uid
	}
	return nil
}

type GetUserIntRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Umap map[int64]*IntUser `protobuf:"bytes,1,rep,name=umap,proto3" json:"umap,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetUserIntRsp) Reset() {
	*x = GetUserIntRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_user_user_int_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserIntRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserIntRsp) ProtoMessage() {}

func (x *GetUserIntRsp) ProtoReflect() protoreflect.Message {
	mi := &file_svc_user_user_int_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserIntRsp.ProtoReflect.Descriptor instead.
func (*GetUserIntRsp) Descriptor() ([]byte, []int) {
	return file_svc_user_user_int_proto_rawDescGZIP(), []int{1}
}

func (x *GetUserIntRsp) GetUmap() map[int64]*IntUser {
	if x != nil {
		return x.Umap
	}
	return nil
}

type IntUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid  int64  `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Nick string `protobuf:"bytes,2,opt,name=nick,proto3" json:"nick,omitempty"`
	Age  int32  `protobuf:"varint,3,opt,name=age,proto3" json:"age,omitempty"`
	Sex  int32  `protobuf:"varint,4,opt,name=sex,proto3" json:"sex,omitempty"`
}

func (x *IntUser) Reset() {
	*x = IntUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_user_user_int_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntUser) ProtoMessage() {}

func (x *IntUser) ProtoReflect() protoreflect.Message {
	mi := &file_svc_user_user_int_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntUser.ProtoReflect.Descriptor instead.
func (*IntUser) Descriptor() ([]byte, []int) {
	return file_svc_user_user_int_proto_rawDescGZIP(), []int{2}
}

func (x *IntUser) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *IntUser) GetNick() string {
	if x != nil {
		return x.Nick
	}
	return ""
}

func (x *IntUser) GetAge() int32 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *IntUser) GetSex() int32 {
	if x != nil {
		return x.Sex
	}
	return 0
}

type TestReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Old int32 `protobuf:"varint,1,opt,name=old,proto3" json:"old,omitempty"`
}

func (x *TestReq) Reset() {
	*x = TestReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_user_user_int_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestReq) ProtoMessage() {}

func (x *TestReq) ProtoReflect() protoreflect.Message {
	mi := &file_svc_user_user_int_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestReq.ProtoReflect.Descriptor instead.
func (*TestReq) Descriptor() ([]byte, []int) {
	return file_svc_user_user_int_proto_rawDescGZIP(), []int{3}
}

func (x *TestReq) GetOld() int32 {
	if x != nil {
		return x.Old
	}
	return 0
}

type TestRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	New int32 `protobuf:"varint,2,opt,name=new,proto3" json:"new,omitempty"`
}

func (x *TestRsp) Reset() {
	*x = TestRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_user_user_int_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestRsp) ProtoMessage() {}

func (x *TestRsp) ProtoReflect() protoreflect.Message {
	mi := &file_svc_user_user_int_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestRsp.ProtoReflect.Descriptor instead.
func (*TestRsp) Descriptor() ([]byte, []int) {
	return file_svc_user_user_int_proto_rawDescGZIP(), []int{4}
}

func (x *TestRsp) GetNew() int32 {
	if x != nil {
		return x.New
	}
	return 0
}

var File_svc_user_user_int_proto protoreflect.FileDescriptor

var file_svc_user_user_int_proto_rawDesc = []byte{
	0x0a, 0x17, 0x73, 0x76, 0x63, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x69, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x73, 0x76, 0x63, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x1a, 0x10, 0x73, 0x76, 0x63, 0x2f, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4a, 0x0a, 0x0d, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x27, 0x0a, 0x03,
	0x72, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x45, 0x78, 0x74, 0x52, 0x65, 0x71,
	0x52, 0x03, 0x72, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x9e, 0x01, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x52, 0x73, 0x70, 0x12, 0x3b, 0x0a, 0x04, 0x75, 0x6d, 0x61,
	0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x73, 0x76, 0x63, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x6e, 0x74, 0x52, 0x73, 0x70, 0x2e, 0x55, 0x6d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x04, 0x75, 0x6d, 0x61, 0x70, 0x1a, 0x50, 0x0a, 0x09, 0x55, 0x6d, 0x61, 0x70, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x76, 0x63,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x49, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x53, 0x0a, 0x07, 0x49, 0x6e, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x69, 0x63, 0x6b, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x69, 0x63, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73,
	0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x73, 0x65, 0x78, 0x22, 0x1b, 0x0a,
	0x07, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x6c, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6f, 0x6c, 0x64, 0x22, 0x1b, 0x0a, 0x07, 0x54, 0x65,
	0x73, 0x74, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x65, 0x77, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x03, 0x6e, 0x65, 0x77, 0x32, 0x8c, 0x01, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x6e, 0x74, 0x12, 0x47, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1d,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x52, 0x73, 0x70, 0x12, 0x38, 0x0a, 0x04,
	0x54, 0x65, 0x73, 0x74, 0x12, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x76, 0x63,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x54,
	0x65, 0x73, 0x74, 0x52, 0x73, 0x70, 0x42, 0x1c, 0x5a, 0x1a, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73,
	0x76, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x73, 0x76, 0x63, 0x2f,
	0x75, 0x73, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_svc_user_user_int_proto_rawDescOnce sync.Once
	file_svc_user_user_int_proto_rawDescData = file_svc_user_user_int_proto_rawDesc
)

func file_svc_user_user_int_proto_rawDescGZIP() []byte {
	file_svc_user_user_int_proto_rawDescOnce.Do(func() {
		file_svc_user_user_int_proto_rawDescData = protoimpl.X.CompressGZIP(file_svc_user_user_int_proto_rawDescData)
	})
	return file_svc_user_user_int_proto_rawDescData
}

var file_svc_user_user_int_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_svc_user_user_int_proto_goTypes = []interface{}{
	(*GetUserIntReq)(nil),  // 0: proto.svc.user.GetUserIntReq
	(*GetUserIntRsp)(nil),  // 1: proto.svc.user.GetUserIntRsp
	(*IntUser)(nil),        // 2: proto.svc.user.IntUser
	(*TestReq)(nil),        // 3: proto.svc.user.TestReq
	(*TestRsp)(nil),        // 4: proto.svc.user.TestRsp
	nil,                    // 5: proto.svc.user.GetUserIntRsp.UmapEntry
	(*svc.BaseExtReq)(nil), // 6: proto.svc.BaseExtReq
}
var file_svc_user_user_int_proto_depIdxs = []int32{
	6, // 0: proto.svc.user.GetUserIntReq.req:type_name -> proto.svc.BaseExtReq
	5, // 1: proto.svc.user.GetUserIntRsp.umap:type_name -> proto.svc.user.GetUserIntRsp.UmapEntry
	2, // 2: proto.svc.user.GetUserIntRsp.UmapEntry.value:type_name -> proto.svc.user.IntUser
	0, // 3: proto.svc.user.UserInt.GetUser:input_type -> proto.svc.user.GetUserIntReq
	3, // 4: proto.svc.user.UserInt.Test:input_type -> proto.svc.user.TestReq
	1, // 5: proto.svc.user.UserInt.GetUser:output_type -> proto.svc.user.GetUserIntRsp
	4, // 6: proto.svc.user.UserInt.Test:output_type -> proto.svc.user.TestRsp
	5, // [5:7] is the sub-list for method output_type
	3, // [3:5] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_svc_user_user_int_proto_init() }
func file_svc_user_user_int_proto_init() {
	if File_svc_user_user_int_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_svc_user_user_int_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserIntReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_user_user_int_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserIntRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_user_user_int_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_user_user_int_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_user_user_int_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_svc_user_user_int_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_svc_user_user_int_proto_goTypes,
		DependencyIndexes: file_svc_user_user_int_proto_depIdxs,
		MessageInfos:      file_svc_user_user_int_proto_msgTypes,
	}.Build()
	File_svc_user_user_int_proto = out.File
	file_svc_user_user_int_proto_rawDesc = nil
	file_svc_user_user_int_proto_goTypes = nil
	file_svc_user_user_int_proto_depIdxs = nil
}
